project_name: websearch-mcp

version: 2

before:
  hooks:
    - go mod tidy
    - go generate ./...

builds:
  - id: websearch-mcp
    main: .
    binary: websearch-mcp
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    ignore:
      - goos: windows
        goarch: arm64
    ldflags:
      - -w -s
      - -X main.version={{.Version}}
      - -X main.buildTime={{.Date}}
      - -X main.gitCommit={{.FullCommit}}
    mod_timestamp: '{{ .CommitTimestamp }}'

archives:
  - id: websearch-mcp-archive
    builds:
      - websearch-mcp
    name_template: >-
      {{ .ProjectName }}-{{ .Version }}-
      {{- title .Os }}-
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    format_overrides:
      - goos: windows
        format: zip
    files:
      - README.md
      - USAGE.md
      - TABNINE_SETUP.md
      - TABNINE_QUICK_REFERENCE.md
      - mcp-server-config.json
      - examples/**/*

checksum:
  name_template: 'checksums.txt'

snapshot:
  name_template: "{{ incpatch .Version }}-next"

changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^ci:'
      - '^build:'
      - '^style:'
      - '^refactor:'
      - '^chore:'
  groups:
    - title: Features
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 0
    - title: 'Bug fixes'
      regexp: '^.*?bug(\([[:word:]]+\))??!?:.+$'
      order: 1
    - title: 'Performance improvements'
      regexp: '^.*?perf(\([[:word:]]+\))??!?:.+$'
      order: 2
    - title: Others
      order: 999

dockers:
  - image_templates:
      - "websearch-mcp:latest"
      - "websearch-mcp:{{ .Tag }}"
      - "websearch-mcp:v{{ .Major }}"
      - "websearch-mcp:v{{ .Major }}.{{ .Minor }}"
      - "ghcr.io/{{.Env.GITHUB_REPOSITORY_OWNER}}/websearch-mcp:latest"
      - "ghcr.io/{{.Env.GITHUB_REPOSITORY_OWNER}}/websearch-mcp:{{ .Tag }}"
      - "ghcr.io/{{.Env.GITHUB_REPOSITORY_OWNER}}/websearch-mcp:v{{ .Major }}"
      - "ghcr.io/{{.Env.GITHUB_REPOSITORY_OWNER}}/websearch-mcp:v{{ .Major }}.{{ .Minor }}"
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--platform=linux/amd64"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.description=WebSearch MCP Server"
      - "--label=org.opencontainers.image.url=https://github.com/{{.Env.GITHUB_REPOSITORY}}"
      - "--label=org.opencontainers.image.source=https://github.com/{{.Env.GITHUB_REPOSITORY}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.licenses=MIT"

brews:
  - name: websearch-mcp
    repository:
      owner: "{{ .Env.GITHUB_REPOSITORY_OWNER }}"
      name: homebrew-tap
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"
    folder: Formula
    homepage: "https://github.com/{{ .Env.GITHUB_REPOSITORY }}"
    description: "WebSearch MCP Server - Model Context Protocol server for web search"
    license: "MIT"
    test: |
      system "#{bin}/websearch-mcp", "--help"
    install: |
      bin.install "websearch-mcp"

release:
  github:
    owner: "{{ .Env.GITHUB_REPOSITORY_OWNER }}"
    name: "{{ .Env.GITHUB_REPOSITORY_NAME }}"
  name_template: "WebSearch MCP Server {{.Version}}"
  header: |
    ## WebSearch MCP Server {{.Version}}
    
    A Model Context Protocol (MCP) server that provides web search capabilities using DuckDuckGo.
    Designed for seamless integration with Tabnine Agents and other MCP-compatible AI systems.
    
    ### Quick Start
    
    1. Download the appropriate binary for your platform
    2. Create a `.mcp_servers` configuration file
    3. Start using with your Tabnine Agent!
    
    ### Docker
    
    ```bash
    docker run -p 8080:8080 ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{.Version}}
    ```
  footer: |
    ## Installation
    
    ### Binary Installation
    
    Download the appropriate binary for your platform from the assets below.
    
    ### Homebrew (macOS/Linux)
    
    ```bash
    brew tap {{ .Env.GITHUB_REPOSITORY_OWNER }}/tap
    brew install websearch-mcp
    ```
    
    ### Docker
    
    ```bash
    docker run -p 8080:8080 ghcr.io/{{ .Env.GITHUB_REPOSITORY }}:{{.Version}}
    ```
    
    ### From Source
    
    ```bash
    go install github.com/{{ .Env.GITHUB_REPOSITORY }}@{{.Version}}
    ```
    
    ## Documentation
    
    - [Setup Guide](https://github.com/{{ .Env.GITHUB_REPOSITORY }}/blob/{{.Version}}/TABNINE_SETUP.md)
    - [Quick Reference](https://github.com/{{ .Env.GITHUB_REPOSITORY }}/blob/{{.Version}}/TABNINE_QUICK_REFERENCE.md)
    - [Usage Documentation](https://github.com/{{ .Env.GITHUB_REPOSITORY }}/blob/{{.Version}}/USAGE.md)
  prerelease: auto

nfpms:
  - id: websearch-mcp
    package_name: websearch-mcp
    vendor: "{{ .Env.GITHUB_REPOSITORY_OWNER }}"
    homepage: "https://github.com/{{ .Env.GITHUB_REPOSITORY }}"
    maintainer: "{{ .Env.GITHUB_REPOSITORY_OWNER }}"
    description: "WebSearch MCP Server - Model Context Protocol server for web search"
    license: MIT
    formats:
      - deb
      - rpm
      - apk
    bindir: /usr/bin
    contents:
      - src: ./README.md
        dst: /usr/share/doc/websearch-mcp/README.md
      - src: ./TABNINE_SETUP.md
        dst: /usr/share/doc/websearch-mcp/TABNINE_SETUP.md
      - src: ./examples/
        dst: /usr/share/doc/websearch-mcp/examples/